{"title":"Module nutzen","markdown":{"headingText":"Module nutzen","containsRefs":false,"markdown":"\n\nBislang haben wir einige Grundlagen in Python kennengelernt. Wie wissen, was Listen sind, wie eigene Funktionen geschrieben werden etc. \n\nGrundsätzlich könnten wir also mit der Datenanalyse anfangen. Jedoch müssten wir jegliche Funktionalität (z.B. CSV-Dateien einlesen, Graphen plotten etc.) selber von Grund auf programmieren. \n\nDies ist aber natürlich nicht notwendig, da Python sich eine großen Community erfreut und viele der **benötigten Funktionalitäten bereits von anderen programmiert** wurden. Um diese Funktionalitäten nutzen zu können (Hinweis: Python ist Open Source, d.h. der Source Code ist grundsätzlich frei zugänglich) müssen wir spezifische Module importieren. \n\n\n\n## Module importieren\n\nDies ist in Python ziemlich einfach und wird durch den `import` Befehl erreicht.\n\n**Ein anschauliches Beispiel:** wir möchten den Sinus der Zahl 0.5 berechnen, jedoch ist diese Funktion bei den 70 buildin Funktionen nicht enthalten. Wir können also ganz einfach das Modul `math` importieren und aus diesem Modul die Funktion `sin` nutzen. \n\n### Importieren des gesamten Moduls\n\n### Importieren einzelner Funktionen oder Klassen eines Moduls\n\n### Importieren und umbenennen des Moduls\n\nAnmerkung: für viele Module hat sich ein de facto Standard für die Umbenennung herausgebilded. \n\nSo werden die für uns so wichtigen Module `pandas`, `numpy` und `matplotlib` von den meisten Python-Programmieren wie folgt importiert:\n\n```\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n```\n\n## Wichtige Module für die Datenanalyse\n\nPython hat tausende von Modulen. Für nahezu jedes Problem gibt es bereits eine Lösung. Dies gilt natürlich auch für die Datenanalyse. \n\n### [Numpy](http://www.numpy.org/)\n\nNumpy ist eines der wichtigsten Module in Python. Es ermöglicht schnelle (weil meist vektorisierte) Berechnungen mit Vektoren und Matrizen. Dies ist sehr hilfreich, selbst wenn man sich nicht mit Linearer Algebra beschäftigen muss oder möchte. Jede Tabelle mit Daten kann als Matrix angesehen werden (man stelle sich bspw. eine Exceltabelle vor). \n\nEs gibt unzählige Tutorials und Supportseiten für die Bibliothek numpy. Zwei sehr gute Tutorials finden Sie hier:\n\n- kurze Einführung auf deutsch: [Link](https://www.grund-wissen.de/informatik/python/scipy/numpy.html)\n\n- ausführliches Tutorial auf englisch: [Link](https://stackabuse.com/numpy-tutorial-a-simple-example-based-guide/)\n\nIm folgenden seien die Vorteiel von `numpy` und einer vektorisierten Form der Berechnung gegenüber einer Berechnung mit For-Schleifen dargestellt. \n\n**Aufgabe:** addiere die Elemente zweier (gleich großer) Vektoren. \n\n**Elementweise Addition mit For-Schleife**\n\n**Besser: mit List Comprehension**\n\n**Noch besser: mit Numpy**\n\nDie Variante via Numpy ist nicht nur syntaktisch bedeutend einfacher, sondern bei großen Datenmengen auch um ein Vielfaches schneller. Mit Numpy können so ohne Probleme Millionen von Werten errechnet, transformiert etc. werden. \n\n### [Pandas](https://pandas.pydata.org/)\n\nPandas baut auf numpy auf, d.h. nutzt die Funktionalität von numpy und dient insbesondere der Datenanalyse. Mithilfe von Pandas können z.B. Exceldateien sehr einfach eingelesen, angezeigt und manipuliert werden.\n\nSehr gute Tutorials zu Pandas finden Sie z.B hier:\n\n- ein einführendes deutsches Tutorial: [Link](https://www.statworx.com/de/blog/data-science-in-python-pandas-teil-3/)\n\n- ein sehr ausführliches englisches Tutorial: [Link](https://bitbucket.org/hrojas/learn-pandas)\n\nHier ein kurzes Beispiel: Einlesen einer Excel-Datei und Berechnung des durchschnittlichen Umsatzes je Region\n\n### Matplotlib\n\nDer große Vorteil von Jupyter Notebooks und einer der Hauptgründe für den großen Erfolg ist die Möglichkeit neben Text und ausführbarem Code auch Graphiken darzustellen. Um dies zu tun benötigen Sie natürlich ein Modul zum Erstellen von Charts (es sei denn, Sie wollen diese Funktionalität von Grund auf selber implementieren). \n\nEs gibt unzählige Visualisierungs-Module. Das wohl beliebteste und in Summe vielseitigste ist `matplotlib`.   \n\nFür eine gute Einführung in Matplotlib ist die offizielle Dokumentation recht hilfreich ([hier](https://matplotlib.org/users/index.html)). \n\nAndere gute Bibliotheken, auf die an dieser Stelle nicht weiter eingegangen werden soll, sind z.B.:\n\n- die deklarative Visualisierungsbibliothek [Altair](https://altair-viz.github.io/)\n\n- die webfähige Bibliothek [Plotly](https://plot.ly/python/) bzw. die darauf aufbauende Bibliothek zur Erstellung von Dashboards [Dash](https://dash.plot.ly/)\n\nMatplotlib ermöglicht es nahezu jedes Detail eines Charts selber zu definieren. Das wirkt zu Anfang etwas umständlich, hat aber große Vorteile, weil man nicht - wie z.B. in Excel - beschränkt ist in dem, was man darstellen möchte. \n\nDa `Pandas` und `Matplotlib` zusammenarbeiten kann man in diesem Fall jedoch den Plot auch sehr viel einfacher erstellen.\n\n## Fazit\n\nIn Summe sollte diese Zusammenstellung zwei Dinge zeigen:\n\n1. Durch den Import von Modulen kann Python um speziell benötigte Funktionalitäten erweitert werden\n\n2. Die Bibliotheken Numpy, Pandas und Matplotlib sind drei der grundlegenden Bibliotheken zur Datenanalyse in Python\n\nNatürlich gibt es noch unzählige weitere Bibliothken, die für die Datenanalyse wichtig sind. Mit den o.g. Bibliotheken kann man jedoch schon sehr viel erreichen.\n\n[<center><< zurück zu Einführung Python</center>](03_Einführung_Python.ipynb)[<center>weiter zur Datenanalyse >></center>](05_Beispiel_Datenanalyse.ipynb)\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"Intro_Modules.html"},"language":{},"metadata":{"lang":"de","fig-responsive":true,"quarto-version":"1.2.269","theme":"cosmo","page-layout":"full"},"extensions":{"book":{"multiFile":true}}}}}