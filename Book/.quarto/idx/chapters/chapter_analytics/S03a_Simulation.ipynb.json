{"title":"Simulationen mit Python","markdown":{"headingText":"Simulationen mit Python","containsRefs":false,"markdown":"\n\n## Why is it so useful and important for statistics and research?\n\nSimulation is a very useful tool for statistics / data analysis and research in general. Some reasons for this are:\n\n- **solve probability problems**: use numerical approaches rather than analytical approaches\n\n- **calculate features of probability densities**: calculating features of probability densities involves integration. Instead we could draw a randomly from that density and just calculate the feature from the sampled data. \n\n    > Example:\n    > - what is the variance of a random variable that is described by a $\\text{Beta}(\\alpha=3,\\beta=6)$ distribution?\n    > - if we don't know the formula for this we can simply draw from this distribution (e.g. 1.000 times)\n    > - we then calculate the variance of our randomly sampled data\n  \n\n- **understand the assumed data generation process**: simulate data from a proposed model to get a feel for the data\n   \n\n- **evaluating estimators**: estimator $\\approx$ function of the data. How do we know if model is well specified and appropriate for our model? We can simulate a world, randomly draw data from that world and apply our function to that data. We can then check if we get the right estimator. \n\n    > Example:\n    > - create world: $y = 5 + 17 x + \\epsilon$, where: $\\epsilon = N(0,\\sigma^2)$\n    > - randomly draw data from world: $x = \\text{1.000 random numbers}$ $\\implies y $\n    > - estimate linear regression function and check if parameters $\\beta_0$ and $\\beta_1$ can be recovered / are what we expect (i.e. if a linear regression model is well specified for our data)\n\n\n**Overall:** simulation is a very useful and powerful tool to solve complex problems without using complex math. This is especially true when dealing with probability given humans do not have a good intuition for probabilities.\n\n## Introduction to simulation with `numpy`\n\nIn `python` there are numerous ways to simulate data.\n\nLet's look at some easy simulation examples using `numpy`. Specificall, we need to use:\n\n- `np.random`\n\nLet's look at a typical highschool / undergradiuate probability problem and solve it via simulation:\n\na. You roll one dice $8x$. What is the probability of $4$ sixes?\n\nb. You roll two dices once. What is the probability that the sum of eyes is 7?\n\nc. You make three draws (with replacement) from a Urn holding 20 red, 30 blue, 8 green balls. What is the probability of getting no blue ball?\n\nYou can solve this problems mathematically (i.e. analytically). However, we will use simulation to answer the questions\n\n**a. What is the probability of 4 sixes out of 8 rolls?**\n\nWith higher $n$ the probability will converge to the analytical correct probability which is:\n\n$$P(X = 4) = \\binom{8}{4}\\frac{1}{6}^4(1-\\frac{1}{6})^{8-4} \\approx 2.6048\\%$$\n\n**b. What is the probability of two dices summing to 7?**\n\nWith higher $n$ the probability will converge to the analytical correct probability. Here two dices sum up to $7$ with the following combinations:\n\n- 1, 6\n- 6, 1\n- 2, 5\n- 5, 2\n- 3, 4\n- 4, 3\n\nwith are $6$ combinations out of $36$ total possibilities. Therefore the analytical correct solution is $\\frac{6}{36} \\approx 16.7\\%$\n\n**What is probability of no blue ball with three draws?**\n\nSo far we had assumed equally probabilities for each possible event. Now we need to introduce different probabilities of a specific event occuring\n\n- red = 20/58\n- blue = 30/58\n- green = 8/58\n\nWe can model this easily using `numpy.random` by passing an additional argument `p` (for probability)\n\nWith higher $n$ the probability will converge to the analytical correct probability. Here we have $58^3$ possible combinations to draw. Drawing no blue ball has possible combinations of $28^3$. Therefore the analytical solution is:\n\n$$P(\\text{no blue}) = \\frac{28^3}{58^3} \\approx  11.25\\%$$\n\n## Solve probability problems\n\nLet's look at different and more relevant problems. \n\nAssume that you want to buy a used book from an online retailer. The book is offered from a resellers with the following reviews:\n\n- Seller A: 100% positive ratings; 10 total ratings\n\n- Seller B: 96% positive ratings; 50 total ratings\n\nThe % of positive rating observed is likely not to be the real positive rating %. \n\nAssuming the real positive ratings are 95% for both sellers\n\n- how likely are the above rating observations?\n\n- plot a histogram with the distribution of positivity ratings (use: plot_hist() for this)\n\n\n(Note: this example is inspired by [John Cook](https://www.johndcook.com/blog/2011/09/27/bayesian-amazon/) and [3Blue1Brown](https://www.youtube.com/watch?v=8idr1WZ1A7Q&feature=youtu.be))\n\n### Example: Monthe Hall Problem\n\nThe problem is loosely based on the American TV (game) show *Let's Make a Deal* and is named after its original host, Monty Hall. \n\nThe problem became very famous as a quesiton from a reader's letter quoted in Marilyn vos Savant's \"Ask Marilyn\" column in a US magazine in 1990. \n\nThe question was as follows:\n\n> Suppose you're on a game show, and you're given the choice of three doors: Behind one door is a car; behind the others, goats. You pick a door, say No. 1, and the host, who knows what's behind the doors, opens another door, say No. 3, which has a goat. He then says to you, \"Do you want to pick door No. 2?\" Is it to your advantage to switch your choice?\n\n### The Problem\n\nThere are 3 doors in front of you, and there is a prize behind one of them (a brand new car!).\nOnce you select a door, the moderator will open one of the two you had not selected which does not have a prize behind it.\nYou will then have the opportunity to switch from the door you originally selected to an alternate door.\n\nHere are some examples\n\n| Door 1 | Door 2 | Door 3 | Monte Hall opens... | Result from Switch | Result from stay |\n|:------:|:------:|:------:|:------------------------:|:------------------:|:----------------:|\n|   Car  |  Goat  |  Goat  |        Door 2 or 3       |        Goat        |        Car       |\n|  Goat  |   Car  |  Goat  |          Door 3          |         Car        |       Goat       |\n|  Goat  |  Goat  |   Car  |          Door 2          |         Car        |       Goat       |\n\n**Question** Is it  better to switch or to stay with your initial choice? (Assuming you want to win the car!)\n\nThe problem became so famous because Vos Savant's response was that the contestant should switch to the other door because switching would give you a probability of $\\frac{2}{3}$ of winning the car. Many famous mathematicians disputed the result but it turns out that under the above assumptions the answer is actually correct. See [here](https://en.wikipedia.org/wiki/Monty_Hall_problem) for more infos regarding the problem. \n\n#### Solution to Monte Hall Problem using simulation\n\n### Example: Birthday Problem\n\nThe birthday problem or birthday paradox concerns the probability that, in a set of $n$ randomly chosen people, some pair of them will have the same birthday. The problem is a good example that assessing probabilities is often difficult and results are often non-intuitive. \n\n**Question**: Given a room with 23 randomly selected people, what is the probability that at least two have the same birthday?\n\n#### Solution to Birthday Problem\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"S03a_Simulation.html"},"language":{},"metadata":{"lang":"de","fig-responsive":true,"quarto-version":"1.2.269","theme":"cosmo","page-layout":"full"},"extensions":{"book":{"multiFile":true}}}}}